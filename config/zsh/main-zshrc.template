# ====================================
# ZSH Configuration for AI Development
# Termux AI Setup v2.0 - Rastafari Theme
# Configuración modular con archivos separados
# ====================================

# Oh My Zsh path
export ZSH="$HOME/.oh-my-zsh"

# Tema - Powerlevel10k (configurar con p10k configure)
ZSH_THEME="powerlevel10k/powerlevel10k"

# Plugins esenciales
plugins=(
    git
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-completions
    history-substring-search
    colored-man-pages
    extract
    z
    yazi
    node
    npm
    python
    pip
    docker
    kubectl
)

# Cargar Oh My Zsh
source $ZSH/oh-my-zsh.sh

# ====================================
# CONFIGURACIÓN PERSONALIZADA
# ====================================

# Variables de entorno
export EDITOR='nvim'
export VISUAL='nvim'
export BROWSER='termux-open'
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Configuración de Node.js
export NODE_OPTIONS="--max-old-space-size=4096"

# Configuración de Python
export PYTHONPATH="$HOME/.local/lib/python3.11/site-packages:$PYTHONPATH"

# Path personalizado
export PATH="$HOME/.local/bin:$HOME/bin:$PATH"
export PATH="$HOME/.npm-global/bin:$PATH"

# ====================================
# CARGAR CONFIGURACIÓN MODULAR
# ====================================

# Cargar aliases desde archivo separado
if [[ -f "$HOME/.config/zsh/aliases.zsh" ]]; then
    source "$HOME/.config/zsh/aliases.zsh"
fi

# Cargar funciones desde archivo separado
if [[ -f "$HOME/.config/zsh/functions.zsh" ]]; then
    source "$HOME/.config/zsh/functions.zsh"
fi

# Cargar integración de Yazi
if [[ -f "$HOME/.config/zsh/yazi-integration.zsh" ]]; then
    source "$HOME/.config/zsh/yazi-integration.zsh"
fi

# ====================================
# CONFIGURACIÓN DE HERRAMIENTAS
# ====================================

# Zoxide (mejor cd)
if command -v zoxide >/dev/null 2>&1; then
    eval "$(zoxide init zsh)"
fi

# FZF configuración
if command -v fzf >/dev/null 2>&1; then
    if command -v fd >/dev/null 2>&1; then
        export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    fi
    export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# Autocompletado para zsh-completions
autoload -U compinit && compinit

# ====================================
# CONFIGURACIÓN DE IA (API KEYS)
# ====================================

# Cargar variables de entorno para APIs de IA
if [[ -f "$HOME/.ai-env" ]]; then
    source "$HOME/.ai-env"
fi

# Start AI agent with ':' if available
if [[ -x "$HOME/bin/colon" ]]; then
    alias :='$HOME/bin/colon'
fi

# ====================================
# MENSAJES DE BIENVENIDA
# ====================================

# Mostrar información útil al iniciar
if [[ -o interactive ]]; then
    echo -e "${PURPLE}╔═══════════════════════════════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${PURPLE}║                    🌈 TERMUX AI READY 🎯                    ║${NC}"
    echo -e "${PURPLE}╚═══════════════════════════════════════════════════════════════════════════════════════╝${NC}"
    echo -e "${CYAN}💡 Tip: Type 'sysinfo' for system info, 'sysupdate' to update all${NC}"
    echo -e "${CYAN}🔧 Type 'setup-ai-keys' to configure AI API keys${NC}"
    echo -e "${CYAN}📝 Type 'nvim' to start coding with AI assistance${NC}"
fi

# Cargar configuración local si existe
if [[ -f "$HOME/.zshrc.local" ]]; then
    # shellcheck disable=SC1090
    source "$HOME/.zshrc.local"
fi

# Cargar configuración de Powerlevel10k
if [[ -f "$HOME/.config/zsh/p10k-config.zsh" ]]; then
    source "$HOME/.config/zsh/p10k-config.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# ====================================
# Powerlevel10k Rastafari Theme Configuration
# Tema personalizado con colores rojo, amarillo, verde
# ====================================

# Generated by Powerlevel10k configuration wizard.
# Custom Rastafari Theme Configuration - Red, Yellow, Green
# Based on romkatv/powerlevel10k.

# Temporarily change options.
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob

  # Unset all configuration options. This allows you to apply configuration changes without
  # restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.
  unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

  # Zsh >= 5.1 is required.
  [[ $ZSH_VERSION == (5.<1->*|<6->.*) ]] || return

  # RASTAFARI RAINBOW STYLE CONFIGURATION
  # Red, Yellow, Green block style with newline for commands

  # The list of segments shown on the left (top line - info block)
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    os_icon                 # OS identifier
    dir                     # current directory
    vcs                     # git status
    system_cpu              # CPU usage
    system_memory           # Memory usage
    status                  # exit code
    background_jobs         # background jobs
    virtualenv              # python virtual environment
    context                 # user@hostname
  )

  # The list of segments shown on the right - keep empty for block style
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()

  # Enable multi-line prompt with command on separate line
  typeset -g POWERLEVEL9K_PROMPT_ON_NEWLINE=true
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%F{green}â–¶%f '
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=''
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=''

  # Define custom CPU usage segment
  function prompt_system_cpu() {
    local cpu_usage=0

    # Get CPU usage from /proc/stat
    if [[ -f /proc/stat ]]; then
      local cpu_line=$(head -n 1 /proc/stat)
      local cpu_values=(${cpu_line#cpu })
      local idle=${cpu_values[3]}
      local total=0
      for val in "${cpu_values[@]:0:8}"; do
        total=$((total + val))
      done
      if [[ $total -gt 0 ]]; then
        cpu_usage=$(( (total - idle) * 100 / total ))
      fi
    fi

    # Rastafari color scheme based on usage
    local cpu_bg cpu_fg
    if (( cpu_usage < 30 )); then
      cpu_bg=2    # Green background
      cpu_fg=0    # Black foreground
    elif (( cpu_usage < 70 )); then
      cpu_bg=3    # Yellow background
      cpu_fg=0    # Black foreground
    else
      cpu_bg=1    # Red background
      cpu_fg=15   # White foreground
    fi

    p10k segment -f $cpu_fg -b $cpu_bg -i 'ðŸ”§' -t "CPU ${cpu_usage}%"
  }

  # Define custom Memory usage segment
  function prompt_system_memory() {
    local mem_free_mb=0 mem_usage=0

    # Get Memory info from /proc/meminfo
    if [[ -f /proc/meminfo ]]; then
      local total_kb=$(grep '^MemTotal:' /proc/meminfo | awk '{print $2}')
      local available_kb=$(grep '^MemAvailable:' /proc/meminfo | awk '{print $2}')
      if [[ -z "$available_kb" ]]; then
        available_kb=$(grep '^MemFree:' /proc/meminfo | awk '{print $2}')
      fi

      if [[ $total_kb -gt 0 && -n "$available_kb" ]]; then
        mem_free_mb=$(( available_kb / 1024 ))
        local used_kb=$((total_kb - available_kb))
        mem_usage=$(( used_kb * 100 / total_kb ))
      fi
    fi

    # Rastafari color scheme based on usage
    local mem_bg mem_fg
    if (( mem_usage < 30 )); then
      mem_bg=2    # Green background
      mem_fg=0    # Black foreground
    elif (( mem_usage < 70 )); then
      mem_bg=3    # Yellow background
      mem_fg=0    # Black foreground
    else
      mem_bg=1    # Red background
      mem_fg=15   # White foreground
    fi

    p10k segment -f $mem_fg -b $mem_bg -i 'ðŸ’¾' -t "${mem_free_mb}MB Free"
  }

  # RASTAFARI RAINBOW BLOCK STYLE CONFIGURATION

  # Basic style options for rainbow block appearance
  typeset -g POWERLEVEL9K_BACKGROUND=0                          # Black default background
  typeset -g POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=''          # No subsegment separator
  typeset -g POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=''         # No subsegment separator
  typeset -g POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=''             # No segment separator for block effect
  typeset -g POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=''            # No segment separator for block effect
  typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=''
  typeset -g POWERLEVEL9K_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=''
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL=''
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL=''

  # Add empty line before each prompt for better readability
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

  # Current directory - GREEN block (Rastafari style)
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=0                      # Black text
  typeset -g POWERLEVEL9K_DIR_BACKGROUND=2                      # Green background
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=0            # Black for shortened paths
  typeset -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=0               # Black for anchors
  typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true
  local anchor_files=(
    .bzr
    .citc
    .git
    .hg
    .node-version
    .python-version
    .go-version
    .ruby-version
    .lua-version
    .java-version
    .perl-version
    .php-version
    .tool-versions
    .shims
    .svn
    .terraform
    CVS
    Cargo.toml
    composer.json
    go.mod
    package.json
    stack.yaml
  )
  typeset -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER="(${(j:|:)anchor_files})"
  typeset -g POWERLEVEL9K_DIR_TRUNCATE_BEFORE_MARKER=false
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
  typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=80
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS=40
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT=50
  typeset -g POWERLEVEL9K_DIR_HYPERLINK=false
  typeset -g POWERLEVEL9K_DIR_SHOW_WRITABLE=v3

  # Git status - YELLOW block (Rastafari style)
  typeset -g POWERLEVEL9K_VCS_BRANCH_ICON='âŽ‡ '
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_ICON='?'
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=0                # Black text
  typeset -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND=3               # Yellow background
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=0           # Black text
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=3           # Yellow background
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=0            # Black text
  typeset -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=3            # Yellow background

  # OS identifier - RED block (Rastafari style)
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=15                # White text
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=1                 # Red background

  # Context format: user@hostname - GREEN block (Rastafari style)
  typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE='%n@%m'
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=0                 # Black text
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=2                 # Green background
  typeset -g POWERLEVEL9K_CONTEXT_{DEFAULT,SUDO}_{CONTENT,VISUAL_IDENTIFIER}_EXPANSION=""

  # Background jobs - YELLOW block (Rastafari style)
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=0         # Black text
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=3         # Yellow background
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VISUAL_IDENTIFIER_EXPANSION='âš™'

  # Status format - RED/GREEN blocks based on status (Rastafari style)
  typeset -g POWERLEVEL9K_STATUS_EXTENDED_STATES=true
  typeset -g POWERLEVEL9K_STATUS_OK=true
  typeset -g POWERLEVEL9K_STATUS_OK_FOREGROUND=0               # Black text
  typeset -g POWERLEVEL9K_STATUS_OK_BACKGROUND=2               # Green background for success
  typeset -g POWERLEVEL9K_STATUS_OK_VISUAL_IDENTIFIER_EXPANSION='âœ”'
  typeset -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=15           # White text
  typeset -g POWERLEVEL9K_STATUS_ERROR_BACKGROUND=1            # Red background for error
  typeset -g POWERLEVEL9K_STATUS_ERROR_VISUAL_IDENTIFIER_EXPANSION='âœ˜'

  # Python virtual environment - YELLOW block (Rastafari style)
  typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=0              # Black text
  typeset -g POWERLEVEL9K_VIRTUALENV_BACKGROUND=3              # Yellow background

  # Transient prompt configuration for clean history
  typeset -g POWERLEVEL9K_TRANSIENT_PROMPT=same-dir

  # Instant prompt mode for faster startup
  typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

  # Additional Rastafari style configurations
  typeset -g POWERLEVEL9K_ICON_PADDING=moderate

  # Enable/disable various elements
  typeset -g POWERLEVEL9K_SHOW_RULER=false
  typeset -g POWERLEVEL9K_RULER_CHAR='â”€'
  typeset -g POWERLEVEL9K_RULER_FOREGROUND=240

  # Configure directory truncation for better readability in block style
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
  typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=40

  # Hot reload gives you really fast prompt updates when you change prompt configuration.
  typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=true

  # If p10k is already loaded, reload configuration.
  # This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.
  (( ! $+functions[p10k] )) || p10k reload
}

# Tell `p10k configure` which file it should overwrite.
typeset -g POWERLEVEL9K_CONFIG_FILE=${${(%):-%x}:a}

(( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts'